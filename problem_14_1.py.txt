import numpy as np 
from math import sqrt
import time 

start = time.time()

def isprime(num):
  count = 0
  for i in range(2,int(sqrt(num))):
    if num%i == 0:
      return i
  return count

i_count_dict = {}
longest_chain_len = 0
longest_chain_len_num = 0

def form_a_sequence(num):
  seq_len = 1
  while True:
    if num%2==0:
      num = int(num/2)
      seq_len += 1
    else:
      num = (3*num) + 1
      seq_len += 1
    if num==1:
      break
  return seq_len

# Initializing dictionary with zeros
for i in range(1,1000000):
  i_count_dict[i] = 0

for i in range(1,1000000):
  num = i
  if isprime(num)==0:
    seq_len = form_a_sequence(num)
    i_count_dict[i] = seq_len
  else:
    divisor = isprime(num)
    num = num/divisor
    seq_len = i_count_dict[num] + i_count_dict[divisor] - 1
    i_count_dict[i] = seq_len

print(np.argmax(list(i_count_dict.values())))

end = time.time()
print("Time taken : " + str(end - start))